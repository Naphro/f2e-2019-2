{"version":3,"sources":["svgs sync //.svg$","svgs/cards/club1.svg","svgs/cards/club10.svg","svgs/cards/club11.svg","svgs/cards/club12.svg","svgs/cards/club13.svg","svgs/cards/club2.svg","svgs/cards/club3.svg","svgs/cards/club4.svg","svgs/cards/club5.svg","svgs/cards/club6.svg","svgs/cards/club7.svg","svgs/cards/club8.svg","svgs/cards/club9.svg","svgs/cards/diamond1.svg","svgs/cards/diamond10.svg","svgs/cards/diamond11.svg","svgs/cards/diamond12.svg","svgs/cards/diamond13.svg","svgs/cards/diamond2.svg","svgs/cards/diamond3.svg","svgs/cards/diamond4.svg","svgs/cards/diamond5.svg","svgs/cards/diamond6.svg","svgs/cards/diamond7.svg","svgs/cards/diamond8.svg","svgs/cards/diamond9.svg","svgs/cards/heart1.svg","svgs/cards/heart10.svg","svgs/cards/heart11.svg","svgs/cards/heart12.svg","svgs/cards/heart13.svg","svgs/cards/heart2.svg","svgs/cards/heart3.svg","svgs/cards/heart4.svg","svgs/cards/heart5.svg","svgs/cards/heart6.svg","svgs/cards/heart7.svg","svgs/cards/heart8.svg","svgs/cards/heart9.svg","svgs/cards/spade1.svg","svgs/cards/spade10.svg","svgs/cards/spade11.svg","svgs/cards/spade12.svg","svgs/cards/spade13.svg","svgs/cards/spade2.svg","svgs/cards/spade3.svg","svgs/cards/spade4.svg","svgs/cards/spade5.svg","svgs/cards/spade6.svg","svgs/cards/spade7.svg","svgs/cards/spade8.svg","svgs/cards/spade9.svg","svgs/new_game.svg","svgs/restart.svg","svgs/undo.svg","svgs/index.js","costants/index.js","utils/index.js","components/card/Card.js","components/foundation/Foundation.js","components/cell/Cell.js","components/emptyCascade/EmptyCascade.js","components/cascade/Cascade.js","components/navbar/Navbar.js","containers/table/Table.js","App.js","serviceWorker.js","index.js"],"names":["map","./cards/club1.svg","./cards/club10.svg","./cards/club11.svg","./cards/club12.svg","./cards/club13.svg","./cards/club2.svg","./cards/club3.svg","./cards/club4.svg","./cards/club5.svg","./cards/club6.svg","./cards/club7.svg","./cards/club8.svg","./cards/club9.svg","./cards/diamond1.svg","./cards/diamond10.svg","./cards/diamond11.svg","./cards/diamond12.svg","./cards/diamond13.svg","./cards/diamond2.svg","./cards/diamond3.svg","./cards/diamond4.svg","./cards/diamond5.svg","./cards/diamond6.svg","./cards/diamond7.svg","./cards/diamond8.svg","./cards/diamond9.svg","./cards/heart1.svg","./cards/heart10.svg","./cards/heart11.svg","./cards/heart12.svg","./cards/heart13.svg","./cards/heart2.svg","./cards/heart3.svg","./cards/heart4.svg","./cards/heart5.svg","./cards/heart6.svg","./cards/heart7.svg","./cards/heart8.svg","./cards/heart9.svg","./cards/spade1.svg","./cards/spade10.svg","./cards/spade11.svg","./cards/spade12.svg","./cards/spade13.svg","./cards/spade2.svg","./cards/spade3.svg","./cards/spade4.svg","./cards/spade5.svg","./cards/spade6.svg","./cards/spade7.svg","./cards/spade8.svg","./cards/spade9.svg","./new_game.svg","./restart.svg","./undo.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","r","cache","require","forEach","key","IN_CASCADE","IN_FOUNDATION","IN_CELL","MAX_CARD_SIZE","isMovable","fromCard","toCard","fromCardname","name","toCardname","belong","getNumber","isSameSuit","isBlack","isRed","card1","card2","regex","replace","cardname","test","match","join","deepClone","obj","JSON","parse","stringify","Card","props","card","onMove","className","children","dragEvents","draggable","onDragStart","event","stopPropagation","dataTransfer","setData","dropEvents","droppable","onDragOver","preventDefault","onDrop","text","getData","react_default","a","createElement","assign","concat","src","svgMap","alt","Foundation","_ref","foundation","cards","length","belongIndex","Card_Card","Cell","cell","empty","content","EmptyCascade","cascadeKey","Cascade","templateCards","EmptyCascade_EmptyCascade","reverse","reduce","accu","index","cascade","Navbar","onNew","onRestart","onUndo","onClick","Table","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMove","moveToCascade","moveToFoundation","moveToCell","doesWin","state","foundations","sum","alert","fromRegionIdx","toRegionIdx","fromCards","cascades","oldIndex","indexOf","newCascades","moveCards","slice","objectSpread","filter","some","move","setState","checkDraggable","cells","newCells","moveCard","push","pop","newFoundations","Array","fill","decks","handleNew","bind","assertThisInitialized","handleRestart","_this2","shape","value","flat","n","Math","floor","random","splice","deal","_this3","cloneDecks","toConsumableArray","size","checkedCascades","prevCard","shuffle","_this4","handleUndo","item","Cell_Cell","Foundation_Foundation","Cascade_Cascade","React","Component","App","Table_Table","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gLAAA,IAAAA,EAAA,CACAC,oBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,uBAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,qBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,iBAAA,GACAC,gBAAA,GACAC,aAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAA7D,EAAAyD,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAA9D,EAAAyD,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAjE,IAEAwD,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,oBC5EAU,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC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","file":"static/js/main.e77c2f54.chunk.js","sourcesContent":["var map = {\n\t\"./cards/club1.svg\": 21,\n\t\"./cards/club10.svg\": 22,\n\t\"./cards/club11.svg\": 23,\n\t\"./cards/club12.svg\": 24,\n\t\"./cards/club13.svg\": 25,\n\t\"./cards/club2.svg\": 26,\n\t\"./cards/club3.svg\": 27,\n\t\"./cards/club4.svg\": 28,\n\t\"./cards/club5.svg\": 29,\n\t\"./cards/club6.svg\": 30,\n\t\"./cards/club7.svg\": 31,\n\t\"./cards/club8.svg\": 32,\n\t\"./cards/club9.svg\": 33,\n\t\"./cards/diamond1.svg\": 34,\n\t\"./cards/diamond10.svg\": 35,\n\t\"./cards/diamond11.svg\": 36,\n\t\"./cards/diamond12.svg\": 37,\n\t\"./cards/diamond13.svg\": 38,\n\t\"./cards/diamond2.svg\": 39,\n\t\"./cards/diamond3.svg\": 40,\n\t\"./cards/diamond4.svg\": 41,\n\t\"./cards/diamond5.svg\": 42,\n\t\"./cards/diamond6.svg\": 43,\n\t\"./cards/diamond7.svg\": 44,\n\t\"./cards/diamond8.svg\": 45,\n\t\"./cards/diamond9.svg\": 46,\n\t\"./cards/heart1.svg\": 47,\n\t\"./cards/heart10.svg\": 48,\n\t\"./cards/heart11.svg\": 49,\n\t\"./cards/heart12.svg\": 50,\n\t\"./cards/heart13.svg\": 51,\n\t\"./cards/heart2.svg\": 52,\n\t\"./cards/heart3.svg\": 53,\n\t\"./cards/heart4.svg\": 54,\n\t\"./cards/heart5.svg\": 55,\n\t\"./cards/heart6.svg\": 56,\n\t\"./cards/heart7.svg\": 57,\n\t\"./cards/heart8.svg\": 58,\n\t\"./cards/heart9.svg\": 59,\n\t\"./cards/spade1.svg\": 60,\n\t\"./cards/spade10.svg\": 61,\n\t\"./cards/spade11.svg\": 62,\n\t\"./cards/spade12.svg\": 63,\n\t\"./cards/spade13.svg\": 64,\n\t\"./cards/spade2.svg\": 65,\n\t\"./cards/spade3.svg\": 66,\n\t\"./cards/spade4.svg\": 67,\n\t\"./cards/spade5.svg\": 68,\n\t\"./cards/spade6.svg\": 69,\n\t\"./cards/spade7.svg\": 70,\n\t\"./cards/spade8.svg\": 71,\n\t\"./cards/spade9.svg\": 72,\n\t\"./new_game.svg\": 73,\n\t\"./restart.svg\": 74,\n\t\"./undo.svg\": 75\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/club1.19f587b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/club10.7558835e.svg\";","module.exports = __webpack_public_path__ + \"static/media/club11.04cddc0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club12.e361d87f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club13.0b65ed7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/club2.f84186ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/club3.9e33f3a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/club4.0227e1b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/club5.b0681a4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club6.1524534f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club7.9d8d8068.svg\";","module.exports = __webpack_public_path__ + \"static/media/club8.694add11.svg\";","module.exports = __webpack_public_path__ + \"static/media/club9.14c86976.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond1.86985463.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond10.c135fa5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond11.41e55ad6.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond12.ecf14f50.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond13.54067f8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond2.36b37412.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond3.5d279bfa.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond4.8da22962.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond5.7f0f3305.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond6.1b48eb0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond7.d98f0c31.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond8.4909f881.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond9.23a22a4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart1.92008583.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart10.bf41e2ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart11.905830cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart12.bb0f1dbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart13.1a7ffc95.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart2.2858cdaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart3.34fe969a.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart4.0f33eed8.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart5.a2245b49.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart6.3a6ddcaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart7.7ae23eff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart8.e64e71b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart9.d99a1e22.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade1.d69e1c10.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade10.60e5a146.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade11.f45214e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade12.dd8602d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade13.0dc22554.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade2.105ff13e.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade3.fce020d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade4.cbf00f15.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade5.ad216792.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade6.5af258f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade7.f75b0ca6.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade8.97169ae5.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade9.c067e397.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_game.d97cb4ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/restart.f665204b.svg\";","module.exports = __webpack_public_path__ + \"static/media/undo.bea7376e.svg\";","const cache = {}\n\nfunction importAll(r) {\n  r.keys().forEach(key => (cache[key] = r(key)))\n}\n\nimportAll(require.context('../svgs/', true, /\\.svg$/))\n\nexport default cache\n","export const IN_CASCADE = 0\nexport const IN_FOUNDATION = 1\nexport const IN_CELL = 2\nexport const MAX_CARD_SIZE = 52\n\nexport default {\n  IN_CASCADE,\n  IN_FOUNDATION,\n  IN_CELL,\n  MAX_CARD_SIZE,\n}\n","import { IN_FOUNDATION, IN_CASCADE, IN_CELL } from '../costants'\n\nexport const isMovable = (fromCard, toCard) => {\n  const fromCardname = fromCard.name\n  const toCardname = toCard.name\n\n  if (fromCard.name === toCard.name) {\n    return false\n  }\n\n  if (toCard.belong === IN_FOUNDATION) {\n    if (toCardname === null) {\n      return +getNumber(fromCardname) === 1\n    } else if (!isSameSuit(fromCardname, toCardname)) {\n      return false\n    } else {\n      return getNumber(fromCardname) - getNumber(toCardname) === 1\n    }\n  } else if (toCard.belong === IN_CASCADE) {\n    if (toCardname === null) {\n      return true\n    } else if (\n      (isBlack(toCardname) && isBlack(fromCardname)) ||\n      (isRed(toCardname) && isRed(fromCardname))\n    ) {\n      return false\n    } else {\n      const draggable = getNumber(toCardname) - getNumber(fromCardname) === 1\n      return draggable\n    }\n  } else if (toCard.belong === IN_CELL) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const isSameSuit = (card1, card2) => {\n  const regex = /\\d/g\n  const suit1 = card1.replace(regex, '')\n  const suit2 = card2.replace(regex, '')\n  return suit1 === suit2\n}\n\nexport const isBlack = cardname => {\n  const regexBlack = /(club)|(spade)/g\n  return regexBlack.test(cardname)\n}\n\nexport const isRed = cardname => {\n  const regexRed = /(diamond)|(heart)/g\n  return regexRed.test(cardname)\n}\n\nexport const getNumber = cardname => {\n  const regex = /\\d/g\n  return cardname.match(regex).join('')\n}\n\nexport const deepClone = obj => {\n  return JSON.parse(JSON.stringify(obj))\n}\n","import React, { useState } from 'react'\nimport svgMap from '../../svgs'\nimport { isMovable } from '../../utils'\nimport './Card.css'\n\nexport default function Card(props) {\n  const { card, onMove, className, children } = props\n\n  const handleDragStart = event => {\n    event.stopPropagation()\n    event.dataTransfer.setData('text/plain', JSON.stringify(card))\n  }\n\n  const handleDragOver = event => {\n    event.preventDefault()\n  }\n\n  const handleDrop = event => {\n    const text = event.dataTransfer.getData('text')\n    const fromCard = JSON.parse(text)\n    const toCard = card\n\n    if (isMovable(fromCard, toCard)) {\n      onMove(fromCard, toCard)\n    }\n  }\n\n  const dragEvents = card.draggable\n    ? {\n        onDragStart: handleDragStart,\n      }\n    : null\n\n  const dropEvents = card.droppable\n    ? {\n        onDragOver: handleDragOver,\n        onDrop: handleDrop,\n      }\n    : null\n\n  return (\n    <div\n      className={`${className ? className : ''} card`}\n      draggable={card.draggable}\n      {...dragEvents}\n      {...dropEvents}\n    >\n      <img\n        src={svgMap['./cards/' + card.name + '.svg']}\n        alt=\"card\"\n        draggable={false}\n      />\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport Card from '../card/Card'\nimport './Foundation.css'\nimport { isMovable } from '../../utils'\nimport { IN_FOUNDATION } from '../../costants'\n\nexport default function Foundation({ foundation, onMove, cards }) {\n  const card = cards.length === 0 ? null : cards[cards.length - 1]\n\n  const handleDragOver = event => {\n    event.preventDefault()\n  }\n\n  const handleDrop = event => {\n    event.preventDefault()\n    const text = event.dataTransfer.getData('text')\n    const fromCard = JSON.parse(text)\n    const toCard = {\n      name: null,\n      belong: IN_FOUNDATION,\n      belongIndex: foundation,\n    }\n    if (isMovable(fromCard, toCard)) {\n      onMove(fromCard, toCard)\n    }\n  }\n\n  const dropEvents = card\n    ? null\n    : {\n        onDragOver: handleDragOver,\n        onDrop: handleDrop,\n      }\n\n  return (\n    <div className=\"foundation\" {...dropEvents}>\n      {card ? (\n        <Card card={card} className=\"foundation__card\" onMove={onMove}></Card>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport './Cell.css'\nimport { IN_CELL } from '../../costants'\nimport { isMovable } from '../../utils'\nimport Card from '../card/Card'\n\nexport default function Cell({ cards, cell, onMove }) {\n  const empty = cards.length === 0 ? true : false\n\n  const handleDragOver = event => {\n    event.preventDefault()\n  }\n\n  const handleDrop = event => {\n    event.preventDefault()\n    const text = event.dataTransfer.getData('text')\n    const fromCard = JSON.parse(text)\n    const toCard = { name: null, belong: IN_CELL, belongIndex: cell }\n\n    if (isMovable(fromCard, toCard)) {\n      onMove(fromCard, toCard)\n    }\n  }\n\n  const dropEvents = empty\n    ? {\n        onDragOver: handleDragOver,\n        onDrop: handleDrop,\n      }\n    : null\n\n  const content = empty ? (\n    <div className=\"cell__content\"></div>\n  ) : (\n    <Card card={cards[0]} className=\"cell__card\" onMove={onMove}></Card>\n  )\n\n  return (\n    <div className=\"cell\" {...dropEvents}>\n      {content}\n    </div>\n  )\n}\n","import React from 'react'\nimport { IN_CASCADE } from '../../costants'\nimport { isMovable } from '../../utils'\nimport './EmptyCascade.css'\n\nexport default function EmptyCascade({ cascadeKey, onMove }) {\n  const handleDragOver = event => {\n    event.preventDefault()\n  }\n\n  const handleDrop = event => {\n    event.preventDefault()\n    const text = event.dataTransfer.getData('text')\n    const fromCard = JSON.parse(text)\n    const toCard = { name: null, belong: IN_CASCADE, belongIndex: cascadeKey }\n\n    if (isMovable(fromCard, toCard)) {\n      onMove(fromCard, toCard)\n    }\n  }\n\n  return (\n    <div\n      className=\"empty-cascade\"\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    ></div>\n  )\n}\n","import React from 'react'\nimport './Cascade.css'\nimport Card from '../card/Card'\nimport EmptyCascade from '../emptyCascade/EmptyCascade'\nimport { deepClone } from '../../utils'\n\nexport default function Cascade(props) {\n  const { cards, cascadeKey, onMove } = props\n  let templateCards = deepClone(cards)\n\n  const content =\n    cards.length === 0 ? (\n      <EmptyCascade cascadeKey={cascadeKey} onMove={onMove}></EmptyCascade>\n    ) : (\n      // cards.map((card, index) => {\n      //   return (\n      //     <Card\n      //       card={card}\n      //       cascade={cascadeKey}\n      //       index={index}\n      //       key={card.name + index}\n      //       onMove={onMove}\n      //     ></Card>\n      //   )\n      // })\n\n      templateCards.reverse().reduce(\n        (accu, card, index) => (\n          <Card\n            card={card}\n            className=\"cascade__card\"\n            cascade={cascadeKey}\n            index={index}\n            key={card.name + index}\n            onMove={onMove}\n          >\n            {accu}\n          </Card>\n        ),\n        null\n      )\n    )\n\n  return <div className=\"cascade\">{content}</div>\n}\n","import React from 'react'\nimport svgMap from '../../svgs'\n\nexport default function Navbar({ onNew, onRestart, onUndo }) {\n  return (\n    <nav className=\"sidenav\">\n      <img src={svgMap['./new_game.svg']} alt=\"new game\" onClick={onNew} />\n      <img src={svgMap['./restart.svg']} alt=\"restart\" onClick={onRestart} />\n      {/*<img src={svgMap['./undo.svg']} alt=\"undo\" style={{opacity: 0.25}} onClick={onUndo}/>*/}\n    </nav>\n  )\n}\n","import React from 'react'\n// import classes from \"./Table.css\"\nimport './Table.css'\nimport Foundation from '../../components/foundation/Foundation'\nimport Cell from '../../components/cell/Cell'\nimport Cascade from '../../components/cascade/Cascade'\nimport Navbar from '../../components/navbar/Navbar'\nimport { isMovable, deepClone } from '../../utils'\nimport {\n  IN_FOUNDATION,\n  IN_CASCADE,\n  IN_CELL,\n  MAX_CARD_SIZE,\n} from '../../costants'\n\nexport default class Table extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cells: new Array(4).fill([]),\n      foundations: new Array(4).fill([]),\n      decks: [],\n      cascades: [],\n    }\n    this.handleNew = this.handleNew.bind(this)\n    this.handleRestart = this.handleRestart.bind(this)\n  }\n\n  shuffle() {\n    const cards = ['club', 'diamond', 'heart', 'spade']\n      .map(shape => {\n        return new Array(13).fill(null).map((value, index) => {\n          return shape + (index + 1)\n        })\n      })\n      .flat()\n\n    const decks = []\n    let length = MAX_CARD_SIZE\n    while (length > 0) {\n      const n = Math.floor(Math.random() * length)\n      decks.push({\n        name: cards.splice(n, 1)[0],\n        draggable: false,\n        droppable: false,\n        belong: IN_CASCADE,\n        belongIndex: null,\n      })\n      length--\n    }\n\n    this.setState(\n      {\n        ...this.state,\n        decks: decks,\n      },\n      () => {\n        this.deal()\n      }\n    )\n  }\n\n  deal() {\n    let cloneDecks = [...this.state.decks]\n    const emptyCascades = [7, 7, 7, 7, 6, 6, 6, 6]\n    const cascades = emptyCascades.map((size, index) => {\n      return cloneDecks.splice(0, size).map(card => ({\n        ...card,\n        draggable: false,\n        droppable: false,\n        belong: IN_CASCADE,\n        belongIndex: index,\n      }))\n    })\n\n    this.setState(\n      {\n        ...this.state,\n        cascades: cascades,\n        cells: new Array(4).fill([]),\n        foundations: new Array(4).fill([]),\n      },\n      () => {\n        this.checkDraggable()\n      }\n    )\n  }\n\n  checkDraggable() {\n    const checkedCascades = this.state.cascades.map(cascade => {\n      let prevCard = null\n      let draggable = true\n\n      const reversedCascade = cascade.reverse().map((card, index) => {\n        if (draggable) {\n          draggable = !prevCard || isMovable(prevCard, card)\n          prevCard = card\n        }\n\n        return {\n          ...card,\n          draggable: draggable,\n          droppable: index === 0,\n        }\n      })\n      return reversedCascade.reverse()\n    })\n\n    this.setState(\n      {\n        ...this.state,\n        cascades: checkedCascades,\n      },\n      this.doesWin\n    )\n  }\n\n  handleNew() {\n    this.shuffle()\n  }\n\n  handleRestart() {\n    this.deal()\n  }\n\n  handleUndo() {}\n\n  handleMove = (fromCard, toCard) => {\n    switch (toCard.belong) {\n      case IN_CASCADE:\n        this.moveToCascade(fromCard, toCard)\n        break\n      case IN_FOUNDATION:\n        this.moveToFoundation(fromCard, toCard)\n        break\n      case IN_CELL:\n        this.moveToCell(fromCard, toCard)\n        break\n      default:\n    }\n  }\n\n  // afterMove = () => {\n  //     if (!this.doesWin) {\n  //         this.checkDraggable()\n  //     }\n  // }\n\n  doesWin = () => {\n    const finishCounts = this.state.foundations.reduce((sum, foundation) => {\n      return sum + foundation.length\n    }, 0)\n\n    if (finishCounts === MAX_CARD_SIZE) {\n      alert('YOU WIN !')\n      return true\n    } else {\n      return false\n    }\n  }\n\n  moveToCascade = (fromCard, toCard) => {\n    const fromRegionIdx = fromCard.belongIndex\n    const toRegionIdx = toCard.belongIndex\n\n    if (fromCard.belong === IN_CASCADE) {\n      const fromCards = this.state.cascades[fromRegionIdx]\n      const oldIndex = fromCards.map(card => card.name).indexOf(fromCard.name)\n      const newCascades = deepClone(this.state.cascades)\n      const moveCards = fromCards\n        .slice(oldIndex)\n        .map(card => ({ ...card, belongIndex: toRegionIdx }))\n      newCascades[toRegionIdx] = newCascades[toRegionIdx].concat(moveCards)\n      newCascades[fromRegionIdx] = newCascades[fromRegionIdx].filter(card => {\n        return !moveCards.some(move => card.name === move.name)\n      })\n\n      this.setState(\n        {\n          ...this.state,\n          cascades: newCascades,\n        },\n        this.checkDraggable\n      )\n    } else if (fromCard.belong === IN_CELL) {\n      const fromCard = this.state.cells[fromRegionIdx][0]\n      const newCascades = deepClone(this.state.cascades)\n      const newCells = deepClone(this.state.cells)\n      const moveCard = {\n        ...fromCard,\n        droppable: true,\n        draggable: true,\n        belong: IN_CASCADE,\n        belongIndex: toCard.belongIndex,\n      }\n      newCascades[toRegionIdx].push(moveCard)\n      newCells[fromRegionIdx].pop()\n\n      this.setState(\n        {\n          ...this.state,\n          cascades: newCascades,\n          cells: newCells,\n        },\n        this.checkDraggable\n      )\n    }\n  }\n\n  moveToFoundation = (fromCard, toCard) => {\n    const fromRegionIdx = fromCard.belongIndex\n    const toRegionIdx = toCard.belongIndex\n\n    if (fromCard.belong === IN_CELL) {\n      const fromCard = this.state.cells[fromRegionIdx][0]\n      const newFoundations = deepClone(this.state.foundations)\n      const newCells = deepClone(this.state.cells)\n      const moveCard = {\n        ...fromCard,\n        draggable: false,\n        droppable: true,\n        belong: IN_FOUNDATION,\n        belongIndex: toRegionIdx,\n      }\n\n      newFoundations[toRegionIdx].push(moveCard)\n      newCells[fromRegionIdx].pop()\n\n      this.setState(\n        {\n          ...this.state,\n          foundations: newFoundations,\n          cells: newCells,\n        },\n        this.checkDraggable\n      )\n    } else if (fromCard.belong === IN_CASCADE) {\n      const fromCards = this.state.cascades[fromRegionIdx]\n      const oldIndex = fromCards.map(card => card.name).indexOf(fromCard.name)\n\n      if (oldIndex === fromCards.length - 1) {\n        const newCascades = deepClone(this.state.cascades)\n        const newFoundations = deepClone(this.state.foundations)\n        const moveCards = fromCards.slice(oldIndex).map(card => ({\n          ...card,\n          draggable: false,\n          droppable: true,\n          belong: IN_FOUNDATION,\n          belongIndex: toRegionIdx,\n        }))\n\n        newFoundations[toRegionIdx] = newFoundations[toRegionIdx].concat(\n          moveCards\n        )\n        newCascades[fromRegionIdx] = newCascades[fromRegionIdx].filter(card => {\n          return !moveCards.some(move => card.name === move.name)\n        })\n\n        this.setState(\n          {\n            ...this.state,\n            foundations: newFoundations,\n            cascades: newCascades,\n          },\n          this.checkDraggable\n        )\n      }\n    }\n  }\n\n  moveToCell = (fromCard, toCard) => {\n    const fromRegionIdx = fromCard.belongIndex\n    const toRegionIdx = toCard.belongIndex\n    const fromCards = this.state.cascades[fromRegionIdx]\n    const oldIndex = fromCards.map(card => card.name).indexOf(fromCard.name)\n\n    if (oldIndex === fromCards.length - 1) {\n      const newCascades = deepClone(this.state.cascades)\n      const newCells = deepClone(this.state.cells)\n      const moveCards = fromCards.slice(oldIndex).map(card => ({\n        ...card,\n        draggable: true,\n        droppable: false,\n        belong: IN_CELL,\n        belongIndex: toRegionIdx,\n      }))\n      newCells[toRegionIdx] = newCells[toRegionIdx].concat(moveCards)\n      newCascades[fromRegionIdx] = newCascades[fromRegionIdx].filter(card => {\n        return !moveCards.some(move => card.name === move.name)\n      })\n\n      this.setState(\n        {\n          ...this.state,\n          cells: newCells,\n          cascades: newCascades,\n        },\n        this.checkDraggable\n      )\n    }\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"playground\">\n        <Navbar\n          onNew={this.handleNew}\n          onRestart={this.handleRestart}\n          onUndo={this.handleUndo}\n        ></Navbar>\n        <header className=\"header\"></header>\n        <main className=\"main\">\n          <div className=\"storages\">\n            {this.state.cells.map((item, index) => (\n              <Cell\n                key={index}\n                cell={index}\n                cards={item}\n                onMove={this.handleMove}\n              ></Cell>\n            ))}\n            {this.state.foundations.map((item, index) => (\n              <Foundation\n                key={index}\n                foundation={index}\n                cards={item}\n                onMove={this.handleMove}\n              ></Foundation>\n            ))}\n          </div>\n          <div className=\"cascades\">\n            {this.state.cascades.map((item, index) => (\n              <Cascade\n                key={index}\n                cascadeKey={index}\n                cards={item}\n                onMove={this.handleMove}\n              ></Cascade>\n            ))}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport './App.css'\nimport Table from './containers/table/Table'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table></Table>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}