{"version":3,"sources":["svgs sync //.svg$","svgs/cards/club1.svg","svgs/cards/club10.svg","svgs/cards/club11.svg","svgs/cards/club12.svg","svgs/cards/club13.svg","svgs/cards/club2.svg","svgs/cards/club3.svg","svgs/cards/club4.svg","svgs/cards/club5.svg","svgs/cards/club6.svg","svgs/cards/club7.svg","svgs/cards/club8.svg","svgs/cards/club9.svg","svgs/cards/diamond1.svg","svgs/cards/diamond10.svg","svgs/cards/diamond11.svg","svgs/cards/diamond12.svg","svgs/cards/diamond13.svg","svgs/cards/diamond2.svg","svgs/cards/diamond3.svg","svgs/cards/diamond4.svg","svgs/cards/diamond5.svg","svgs/cards/diamond6.svg","svgs/cards/diamond7.svg","svgs/cards/diamond8.svg","svgs/cards/diamond9.svg","svgs/cards/heart1.svg","svgs/cards/heart10.svg","svgs/cards/heart11.svg","svgs/cards/heart12.svg","svgs/cards/heart13.svg","svgs/cards/heart2.svg","svgs/cards/heart3.svg","svgs/cards/heart4.svg","svgs/cards/heart5.svg","svgs/cards/heart6.svg","svgs/cards/heart7.svg","svgs/cards/heart8.svg","svgs/cards/heart9.svg","svgs/cards/spade1.svg","svgs/cards/spade10.svg","svgs/cards/spade11.svg","svgs/cards/spade12.svg","svgs/cards/spade13.svg","svgs/cards/spade2.svg","svgs/cards/spade3.svg","svgs/cards/spade4.svg","svgs/cards/spade5.svg","svgs/cards/spade6.svg","svgs/cards/spade7.svg","svgs/cards/spade8.svg","svgs/cards/spade9.svg","svgs/new_game.svg","svgs/restart.svg","svgs/undo.svg","svgs/index.js","costants/index.js","utils/index.js","components/card/Card.js","components/foundation/Foundation.js","components/cell/Cell.js","components/emptyCascade/EmptyCascade.js","components/cascade/Cascade.js","components/navbar/Navbar.js","containers/table/Table.js","App.js","serviceWorker.js","index.js"],"names":["map","./cards/club1.svg","./cards/club10.svg","./cards/club11.svg","./cards/club12.svg","./cards/club13.svg","./cards/club2.svg","./cards/club3.svg","./cards/club4.svg","./cards/club5.svg","./cards/club6.svg","./cards/club7.svg","./cards/club8.svg","./cards/club9.svg","./cards/diamond1.svg","./cards/diamond10.svg","./cards/diamond11.svg","./cards/diamond12.svg","./cards/diamond13.svg","./cards/diamond2.svg","./cards/diamond3.svg","./cards/diamond4.svg","./cards/diamond5.svg","./cards/diamond6.svg","./cards/diamond7.svg","./cards/diamond8.svg","./cards/diamond9.svg","./cards/heart1.svg","./cards/heart10.svg","./cards/heart11.svg","./cards/heart12.svg","./cards/heart13.svg","./cards/heart2.svg","./cards/heart3.svg","./cards/heart4.svg","./cards/heart5.svg","./cards/heart6.svg","./cards/heart7.svg","./cards/heart8.svg","./cards/heart9.svg","./cards/spade1.svg","./cards/spade10.svg","./cards/spade11.svg","./cards/spade12.svg","./cards/spade13.svg","./cards/spade2.svg","./cards/spade3.svg","./cards/spade4.svg","./cards/spade5.svg","./cards/spade6.svg","./cards/spade7.svg","./cards/spade8.svg","./cards/spade9.svg","./new_game.svg","./restart.svg","./undo.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","r","cache","require","forEach","key","IN_CASCADE","IN_FOUNDATION","IN_CELL","MAX_CARD_SIZE","isMovable","fromCard","toCard","fromCardname","name","toCardname","belong","getNumber","isSameSuit","isBlack","isRed","card1","card2","regex","replace","cardname","test","match","join","deepClone","obj","JSON","parse","stringify","Card","_ref","card","className","index","onMove","_useState","useState","top","_useState2","slicedToArray","style","dragEvents","draggable","onDragStart","event","dataTransfer","setData","dropEvents","droppable","onDragOver","preventDefault","onDrop","text","getData","console","log","react_default","a","createElement","assign","src","svgMap","alt","Foundation","foundation","cards","length","belongIndex","Cell","cell","empty","content","EmptyCascade","cascadeKey","Cascade","EmptyCascade_EmptyCascade","cascade","Navbar","onNew","onRestart","onUndo","onClick","Table","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMove","moveToCascade","moveToFoundation","moveToCell","doesWin","finishCounts","state","foundations","reduce","sum","alert","fromRegionIdx","toRegionIdx","fromCards","cascades","oldIndex","indexOf","newCascades","moveCards","slice","objectSpread","concat","filter","some","move","setState","checkDraggable","cells","newCells","moveCard","push","pop","newFoundations","Array","fill","decks","handleNew","bind","assertThisInitialized","handleRestart","_this2","shape","value","flat","n","Math","floor","random","splice","deal","_this3","cloneDecks","toConsumableArray","size","checkedCascades","prevCard","reverse","shuffle","_this4","handleUndo","item","Cell_Cell","Foundation_Foundation","Cascade_Cascade","React","Component","App","Table_Table","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iLAAA,IAAAA,EAAA,CACAC,oBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,uBAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,wBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,qBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,iBAAA,GACAC,gBAAA,GACAC,aAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAA7D,EAAAyD,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAA9D,EAAAyD,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAjE,IAEAwD,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,oBC5EAU,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC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","file":"static/js/main.e2855b0a.chunk.js","sourcesContent":["var map = {\n\t\"./cards/club1.svg\": 22,\n\t\"./cards/club10.svg\": 23,\n\t\"./cards/club11.svg\": 24,\n\t\"./cards/club12.svg\": 25,\n\t\"./cards/club13.svg\": 26,\n\t\"./cards/club2.svg\": 27,\n\t\"./cards/club3.svg\": 28,\n\t\"./cards/club4.svg\": 29,\n\t\"./cards/club5.svg\": 30,\n\t\"./cards/club6.svg\": 31,\n\t\"./cards/club7.svg\": 32,\n\t\"./cards/club8.svg\": 33,\n\t\"./cards/club9.svg\": 34,\n\t\"./cards/diamond1.svg\": 35,\n\t\"./cards/diamond10.svg\": 36,\n\t\"./cards/diamond11.svg\": 37,\n\t\"./cards/diamond12.svg\": 38,\n\t\"./cards/diamond13.svg\": 39,\n\t\"./cards/diamond2.svg\": 40,\n\t\"./cards/diamond3.svg\": 41,\n\t\"./cards/diamond4.svg\": 42,\n\t\"./cards/diamond5.svg\": 43,\n\t\"./cards/diamond6.svg\": 44,\n\t\"./cards/diamond7.svg\": 45,\n\t\"./cards/diamond8.svg\": 46,\n\t\"./cards/diamond9.svg\": 47,\n\t\"./cards/heart1.svg\": 48,\n\t\"./cards/heart10.svg\": 49,\n\t\"./cards/heart11.svg\": 50,\n\t\"./cards/heart12.svg\": 51,\n\t\"./cards/heart13.svg\": 52,\n\t\"./cards/heart2.svg\": 53,\n\t\"./cards/heart3.svg\": 54,\n\t\"./cards/heart4.svg\": 55,\n\t\"./cards/heart5.svg\": 56,\n\t\"./cards/heart6.svg\": 57,\n\t\"./cards/heart7.svg\": 58,\n\t\"./cards/heart8.svg\": 59,\n\t\"./cards/heart9.svg\": 60,\n\t\"./cards/spade1.svg\": 61,\n\t\"./cards/spade10.svg\": 62,\n\t\"./cards/spade11.svg\": 63,\n\t\"./cards/spade12.svg\": 64,\n\t\"./cards/spade13.svg\": 65,\n\t\"./cards/spade2.svg\": 66,\n\t\"./cards/spade3.svg\": 67,\n\t\"./cards/spade4.svg\": 68,\n\t\"./cards/spade5.svg\": 69,\n\t\"./cards/spade6.svg\": 70,\n\t\"./cards/spade7.svg\": 71,\n\t\"./cards/spade8.svg\": 72,\n\t\"./cards/spade9.svg\": 73,\n\t\"./new_game.svg\": 74,\n\t\"./restart.svg\": 75,\n\t\"./undo.svg\": 76\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","module.exports = __webpack_public_path__ + \"static/media/club1.19f587b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/club10.7558835e.svg\";","module.exports = __webpack_public_path__ + \"static/media/club11.04cddc0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club12.e361d87f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club13.0b65ed7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/club2.f84186ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/club3.9e33f3a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/club4.0227e1b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/club5.b0681a4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club6.1524534f.svg\";","module.exports = __webpack_public_path__ + \"static/media/club7.9d8d8068.svg\";","module.exports = __webpack_public_path__ + \"static/media/club8.694add11.svg\";","module.exports = __webpack_public_path__ + \"static/media/club9.14c86976.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond1.86985463.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond10.c135fa5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond11.41e55ad6.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond12.ecf14f50.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond13.54067f8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond2.36b37412.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond3.5d279bfa.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond4.8da22962.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond5.7f0f3305.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond6.1b48eb0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond7.d98f0c31.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond8.4909f881.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond9.23a22a4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart1.92008583.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart10.bf41e2ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart11.905830cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart12.bb0f1dbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart13.1a7ffc95.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart2.2858cdaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart3.34fe969a.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart4.0f33eed8.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart5.a2245b49.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart6.3a6ddcaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart7.7ae23eff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart8.e64e71b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart9.d99a1e22.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade1.d69e1c10.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade10.60e5a146.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade11.f45214e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade12.dd8602d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade13.0dc22554.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade2.105ff13e.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade3.fce020d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade4.cbf00f15.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade5.ad216792.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade6.5af258f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade7.f75b0ca6.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade8.97169ae5.svg\";","module.exports = __webpack_public_path__ + \"static/media/spade9.c067e397.svg\";","module.exports = __webpack_public_path__ + \"static/media/new_game.d97cb4ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/restart.f665204b.svg\";","module.exports = __webpack_public_path__ + \"static/media/undo.bea7376e.svg\";","const cache = {};\n\nfunction importAll(r) {\n    r.keys().forEach(key => cache[key] = r(key));\n}\n\nimportAll(require.context('../svgs/', true, /\\.svg$/));\n\nexport default cache;","export const IN_CASCADE = 0;\nexport const IN_FOUNDATION = 1;\nexport const IN_CELL = 2;\nexport const MAX_CARD_SIZE = 52\n\nexport default {\n    IN_CASCADE,\n    IN_FOUNDATION,\n    IN_CELL,\n    MAX_CARD_SIZE\n}","import {IN_FOUNDATION, IN_CASCADE, IN_CELL} from '../costants'\n\nexport const isMovable = (fromCard, toCard) => {\n    const fromCardname = fromCard.name\n    const toCardname = toCard.name\n\n    if (fromCard.name === toCard.name) {\n        return false\n    }\n\n    if (toCard.belong === IN_FOUNDATION) {\n        if (toCardname === null) {\n            return +getNumber(fromCardname) === 1\n        } else if (!isSameSuit(fromCardname, toCardname)) {\n            return false\n        } else {\n            return getNumber(fromCardname) - getNumber(toCardname) === 1\n        }\n    } else if (toCard.belong === IN_CASCADE) {\n        if (toCardname === null) {\n            return true\n        } else if ((isBlack(toCardname) && isBlack(fromCardname)) || (isRed(toCardname) && isRed(fromCardname))) {\n            return false\n        } else {\n            const draggable = getNumber(toCardname) - getNumber(fromCardname) === 1\n            return draggable\n        }\n    } else if (toCard.belong === IN_CELL) {\n        return true;\n    }\n}\n\nexport const isSameSuit = (card1, card2) => {\n    const regex = /\\d/g\n    const suit1 = card1.replace(regex, '');\n    const suit2 = card2.replace(regex, '')\n    return suit1 === suit2\n}\n\nexport const isBlack = (cardname) => {\n    const regexBlack = /(club)|(spade)/g\n    return regexBlack.test(cardname)\n}\n\nexport const isRed = (cardname) => {\n    const regexRed = /(diamond)|(heart)/g\n    return regexRed.test(cardname)\n}\n\nexport const getNumber = (cardname) => {\n    const regex = /\\d/g\n    return cardname.match(regex).join('')\n}\n\nexport const deepClone = (obj) => {\n    return JSON.parse(JSON.stringify(obj))\n}\n","import React, { useState } from 'react'\nimport svgMap from '../../svgs'\nimport { isMovable } from '../../utils'\n\nexport default function Card ({card, className, index, onMove}) {\n\n    const [style, setStyle] = useState({top: (index * 30) + 'px'})\n\n    const handleDragStart = (event) => {\n        event.dataTransfer.setData('text/plain', JSON.stringify(card))\n    }\n\n    const handleDragOver = (event) => {\n        event.preventDefault()\n    }\n\n    const handleDrop = (event) => {\n        const text = event.dataTransfer.getData('text')\n        const fromCard = JSON.parse(text)\n        const toCard = card\n        console.log(fromCard, toCard)\n        if (isMovable(fromCard, toCard)) {\n            onMove(fromCard, toCard)\n        }\n    }\n\n    const dragEvents = card.draggable ? {\n        onDragStart: handleDragStart\n    } : null\n\n    const dropEvents = card.droppable ? {\n        onDragOver: handleDragOver,\n        onDrop: handleDrop\n    } : null\n\n    return (\n        <img className={className}\n             style={style}\n             src={svgMap['./cards/' + card.name + '.svg']}\n             alt=\"card\"\n             draggable={card.draggable}\n             {...dragEvents}\n             {...dropEvents}\n        />\n    )\n}\n","import React from 'react'\nimport Card from '../card/Card'\nimport './Foundation.css'\nimport { isMovable } from '../../utils'\nimport { IN_FOUNDATION} from '../../costants'\n\nexport default function Foundation({foundation, onMove, cards}) {\n    const card = cards.length === 0 ? null : cards[cards.length - 1];\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n    }\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        const text = event.dataTransfer.getData('text')\n        const fromCard = JSON.parse(text)\n        const toCard = {name: null, belong: IN_FOUNDATION, belongIndex: foundation}\n        if (isMovable(fromCard, toCard)) {\n            onMove(fromCard, toCard)\n        }\n    }\n\n    const dropEvents = card ? null : {\n        onDragOver: handleDragOver,\n        onDrop: handleDrop\n    }\n\n    return (\n        <div\n            className=\"foundation\"\n            {...dropEvents}\n        >\n            {\n                card ? (\n                    <Card\n                        card={card}\n                        className=\"foundation__card\"\n                        onMove={onMove}\n                    ></Card>\n                ) : null\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport './Cell.css'\nimport { IN_CELL } from '../../costants'\nimport { isMovable } from '../../utils'\nimport Card from '../card/Card'\n\nexport default function Cell ({cards, cell, onMove}) {\n\n    const empty = cards.length === 0 ? true : false\n\n    const handleDragOver = (event) => {\n        event.preventDefault()\n    }\n\n    const handleDrop = (event) => {\n        event.preventDefault()\n        const text = event.dataTransfer.getData('text')\n        const fromCard = JSON.parse(text)\n        const toCard = {name: null, belong: IN_CELL, belongIndex: cell}\n\n        if (isMovable(fromCard, toCard)) {\n            onMove(fromCard, toCard)\n        }\n    }\n\n    const dropEvents = empty ? {\n        onDragOver: handleDragOver,\n        onDrop: handleDrop\n    } : null\n\n    const content = empty ? (\n        <div className=\"cell__content\"></div>\n    ) : (\n        <Card\n            card={cards[0]}\n            className=\"cell__card\"\n            onMove={onMove}\n        ></Card>\n    )\n\n    return (\n        <div\n            className=\"cell\"\n            {...dropEvents}\n        >\n            {content}\n        </div>\n    )\n}\n","import React from 'react'\nimport { IN_CASCADE } from '../../costants'\nimport { isMovable } from '../../utils'\nimport './EmptyCascade.css'\n\nexport default function EmptyCascade ({cascadeKey, onMove}) {\n\n    const handleDragOver = (event) => {\n        event.preventDefault()\n    }\n\n    const handleDrop = (event) => {\n        event.preventDefault()\n        const text = event.dataTransfer.getData('text')\n        const fromCard = JSON.parse(text)\n        const toCard = {name: null, belong: IN_CASCADE, belongIndex: cascadeKey}\n\n        if (isMovable(fromCard, toCard)) {\n            onMove(fromCard, toCard)\n        }\n    }\n\n    return (\n        <div\n            className=\"empty-cascade\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n        >\n        </div>\n    )\n}\n","import React from 'react'\nimport './Cascade.css'\nimport Card from '../card/Card'\nimport EmptyCascade from '../emptyCascade/EmptyCascade'\n\nexport default function Cascade ({cards, cascadeKey, onMove}) {\n\n    const content = cards.length === 0 ? (\n        <EmptyCascade\n            cascadeKey={cascadeKey}\n            onMove={onMove}\n        ></EmptyCascade>\n    ) : (\n        cards.map((card, index) => {\n            return (\n                <Card\n                    card={card}\n                    className=\"cascade__card\"\n                    cascade={cascadeKey}\n                    index={index}\n                    key={card.name + index}\n                    onMove={onMove}\n                ></Card>\n            )\n        })\n    )\n\n    return (\n        <div className=\"cascade\">{content}</div>\n    )\n}\n","import React from 'react'\nimport svgMap from '../../svgs'\n\nexport default function Navbar({onNew, onRestart, onUndo}) {\n    return (\n        <nav className=\"sidenav\">\n            <img src={svgMap['./new_game.svg']} alt=\"new game\" onClick={onNew}/>\n            <img src={svgMap['./restart.svg']} alt=\"restart\" onClick={onRestart}/>\n            {/*<img src={svgMap['./undo.svg']} alt=\"undo\" style={{opacity: 0.25}} onClick={onUndo}/>*/}\n        </nav>\n    )\n}\n","import React from 'react'\n// import classes from \"./Table.css\"\nimport './Table.css'\nimport Foundation from '../../components/foundation/Foundation'\nimport Cell from '../../components/cell/Cell'\nimport Cascade from '../../components/cascade/Cascade'\nimport Navbar from '../../components/navbar/Navbar'\nimport { isMovable, deepClone } from '../../utils'\nimport { IN_FOUNDATION, IN_CASCADE, IN_CELL, MAX_CARD_SIZE } from '../../costants'\n\nexport default class Table extends React.Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            cells: new Array(4).fill([]),\n            foundations: new Array(4).fill([]),\n            decks: [],\n            cascades: []\n        }\n        this.handleNew = this.handleNew.bind(this)\n        this.handleRestart = this.handleRestart.bind(this)\n    }\n\n    shuffle () {\n        const cards = ['club', 'diamond', 'heart', 'spade'].map(shape => {\n            return new Array(13).fill(null).map((value, index) => {\n                return shape + (index + 1)\n            })\n        }).flat()\n\n        const decks = []\n        let length = MAX_CARD_SIZE\n        while (length > 0) {\n            const n = Math.floor(Math.random() * length)\n            decks.push({\n                name: cards.splice(n, 1)[0],\n                draggable: false,\n                droppable: false,\n                belong: IN_CASCADE,\n                belongIndex: null\n            })\n            length--\n        }\n\n        this.setState({\n            ...this.state,\n            decks: decks\n        }, () => {\n            this.deal()\n        })\n    }\n\n    deal () {\n        let cloneDecks = [...this.state.decks]\n        const emptyCascades = [7, 7, 7, 7, 6, 6, 6, 6]\n        const cascades = emptyCascades.map((size, index) => {\n            return cloneDecks.splice(0, size).map(\n                card => ({...card, draggable: false, droppable: false, belong: IN_CASCADE, belongIndex: index})\n            )\n        })\n\n        this.setState({\n            ...this.state,\n            cascades: cascades,\n            cells: new Array(4).fill([]),\n            foundations: new Array(4).fill([])\n        }, () => {\n            this.checkDraggable()\n        })\n    }\n\n    checkDraggable () {\n        const checkedCascades = this.state.cascades.map(cascade => {\n            let prevCard = null\n            let draggable = true\n\n            const reversedCascade = cascade.reverse().map((card, index) => {\n                if (draggable) {\n                    draggable = (!prevCard || isMovable(prevCard, card))\n                    prevCard = card\n                }\n\n                return {\n                    ...card,\n                    draggable: draggable,\n                    droppable: index === 0\n                }\n            })\n            return reversedCascade.reverse()\n        })\n\n        this.setState({\n            ...this.state,\n            cascades: checkedCascades\n        }, this.doesWin)\n    }\n\n    handleNew () {\n        this.shuffle()\n    }\n\n    handleRestart () {\n        this.deal()\n    }\n\n    handleUndo () {\n\n    }\n\n    handleMove = (fromCard, toCard) => {\n        switch (toCard.belong) {\n            case IN_CASCADE:\n                this.moveToCascade(fromCard, toCard)\n                break\n            case IN_FOUNDATION:\n                this.moveToFoundation(fromCard, toCard)\n                break\n            case IN_CELL:\n                this.moveToCell(fromCard, toCard)\n                break\n            default:\n        }\n    }\n\n    // afterMove = () => {\n    //     if (!this.doesWin) {\n    //         this.checkDraggable()\n    //     }\n    // }\n\n    doesWin = () => {\n        const finishCounts = this.state.foundations.reduce((sum, foundation) => {\n            return sum + foundation.length;\n        }, 0)\n\n        console.log(finishCounts)\n\n        if (finishCounts === MAX_CARD_SIZE) {\n            alert('YOU WIN !');\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    moveToCascade = (fromCard, toCard) => {\n        const fromRegionIdx = fromCard.belongIndex\n        const toRegionIdx = toCard.belongIndex\n\n        if (fromCard.belong === IN_CASCADE) {\n            const fromCards = this.state.cascades[fromRegionIdx]\n            const oldIndex = fromCards.map(card => card.name).indexOf(fromCard.name)\n            const newCascades = deepClone(this.state.cascades)\n            const moveCards = fromCards.slice(oldIndex)\n                .map(card => ({...card, belongIndex: toCard.belongIndex}))\n            newCascades[toRegionIdx] = newCascades[toRegionIdx].concat(moveCards)\n            newCascades[fromRegionIdx] = newCascades[fromRegionIdx].filter(card => {\n                return !moveCards.some(move => card.name === move.name)\n            })\n\n            this.setState({\n                ...this.state,\n                cascades: newCascades\n            }, this.checkDraggable)\n        } else if (fromCard.belong === IN_CELL) {\n            const fromCard = this.state.cells[fromRegionIdx][0]\n            const newCascades = deepClone(this.state.cascades)\n            const newCells = deepClone(this.state.cells)\n            const moveCard = {\n                ...fromCard,\n                droppable: true,\n                draggable: true,\n                belong: IN_CASCADE,\n                belongIndex: toCard.belongIndex\n            }\n            newCascades[toRegionIdx].push(moveCard)\n            newCells[fromRegionIdx].pop()\n\n            this.setState({\n                ...this.state,\n                cascades: newCascades,\n                cells: newCells\n            }, this.checkDraggable)\n        }\n    }\n\n    moveToFoundation = (fromCard, toCard) => {\n        const fromRegionIdx = fromCard.belongIndex\n        const toRegionIdx = toCard.belongIndex\n        const fromCards = this.state.cascades[fromRegionIdx]\n        const oldIndex = fromCards.map(card => card.name).indexOf(fromCard.name)\n\n        if (oldIndex === fromCards.length - 1) {\n            const newCascades = deepClone(this.state.cascades)\n            const newFoundations = deepClone(this.state.foundations)\n            const moveCards = fromCards.slice(oldIndex).map(card => ({\n                ...card,\n                draggable: false,\n                droppable: true,\n                belong: IN_FOUNDATION,\n                belongIndex: toRegionIdx\n            }))\n            console.log(moveCards)\n            newFoundations[toRegionIdx] = newFoundations[toRegionIdx].concat(moveCards)\n            newCascades[fromRegionIdx] = newCascades[fromRegionIdx].filter(card => {\n                return !moveCards.some(move => card.name === move.name)\n            })\n\n            this.setState({\n                ...this.state,\n                foundations: newFoundations,\n                cascades: newCascades\n            }, this.checkDraggable)\n        }\n    }\n\n    moveToCell = (fromCard, toCard) => {\n        const fromRegionIdx = fromCard.belongIndex\n        const toRegionIdx = toCard.belongIndex\n        const fromCards = this.state.cascades[fromRegionIdx]\n        const oldIndex = fromCards.map(card => card.name).indexOf(fromCard.name)\n\n        if (oldIndex === fromCards.length - 1) {\n            const newCascades = deepClone(this.state.cascades)\n            const newCells = deepClone(this.state.cells)\n            const moveCards = fromCards.slice(oldIndex).map(card => ({\n                ...card,\n                draggable: true,\n                droppable: false,\n                belong: IN_CELL,\n                belongIndex: toRegionIdx\n            }))\n            newCells[toRegionIdx] = newCells[toRegionIdx].concat(moveCards)\n            newCascades[fromRegionIdx] = newCascades[fromRegionIdx].filter(card => {\n                return !moveCards.some(move => card.name === move.name)\n            })\n\n            this.setState({\n                ...this.state,\n                cells: newCells,\n                cascades: newCascades\n            }, this.checkDraggable)\n        }\n    }\n\n    componentDidMount () {\n\n    }\n\n    render () {\n        return (\n            <div className=\"playground\">\n                <Navbar\n                    onNew={this.handleNew}\n                    onRestart={this.handleRestart}\n                    onUndo={this.handleUndo}\n                ></Navbar>\n                <header className=\"header\"></header>\n                <main className=\"main\">\n                    <div className=\"storages\">\n                        {\n                            this.state.cells.map((item, index) => (\n                                <Cell\n                                    key={index}\n                                    cell={index}\n                                    cards={item}\n                                    onMove={this.handleMove}\n                                ></Cell>\n                            ))\n                        }\n                        {\n                            this.state.foundations.map((item, index) => (\n                                <Foundation\n                                    key={index}\n                                    foundation={index}\n                                    cards={item}\n                                    onMove={this.handleMove}\n                                ></Foundation>)\n                            )\n                        }\n                    </div>\n                    <div className=\"cascades\">\n                        {\n                            this.state.cascades.map((item, index) => (\n                                <Cascade\n                                    key={index}\n                                    cascadeKey={index}\n                                    cards={item}\n                                    onMove={this.handleMove}\n                                ></Cascade>)\n                            )\n                        }\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Table from \"./containers/table/Table\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table></Table>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}